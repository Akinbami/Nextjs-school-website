{"ast":null,"code":"var _jsxFileName = \"/Users/dayoakinbami/Desktop/dev/abc-frontend/abc/pages/login.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react'; // import ReactQuill from 'react-quill';\n\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport LoadingOverlay from 'react-loading-overlay';\nimport AdminLayout from '../components/AdminLayout'; // import 'react-quill/dist/quill.snow.css'\n\nconst LOGIN_API = \"https://6j0n7kx92c.execute-api.us-east-2.amazonaws.com/dev/api/login\";\n\nconst Login = () => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const handleChange = value => {\n    console.log(\"value \", value);\n    setContent(value);\n  };\n\n  const login = () => {\n    if (username == \"\" || password == \"\") {\n      setError(\"please complete the form and try again\");\n    } else {\n      console.log(\"username and password \", username, password);\n      setIsLoading(true);\n      fetch(LOGIN_API, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        setIsLoading(false);\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(error);\n      });\n    }\n  };\n\n  return __jsx(LoadingOverlay, {\n    active: isLoading,\n    spinner: true,\n    text: \"Loading your content...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(AdminLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(_JSXStyle, {\n    id: \"1607622671\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXlvYWtpbmJhbWkvRGVza3RvcC9kZXYvYWJjLWZyb250ZW5kL2FiYy9wYWdlcy9sb2dpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RXdCIiwiZmlsZSI6Ii9Vc2Vycy9kYXlvYWtpbmJhbWkvRGVza3RvcC9kZXYvYWJjLWZyb250ZW5kL2FiYy9wYWdlcy9sb2dpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZVN0YXRlLHVzZVJlZn0gZnJvbSAncmVhY3QnO1xuLy8gaW1wb3J0IFJlYWN0UXVpbGwgZnJvbSAncmVhY3QtcXVpbGwnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCc7XG5pbXBvcnQgTG9hZGluZ092ZXJsYXkgZnJvbSAncmVhY3QtbG9hZGluZy1vdmVybGF5J1xuXG5pbXBvcnQgQWRtaW5MYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9BZG1pbkxheW91dCc7XG5cbi8vIGltcG9ydCAncmVhY3QtcXVpbGwvZGlzdC9xdWlsbC5zbm93LmNzcydcblxuXG5cblxuY29uc3QgTE9HSU5fQVBJID0gXCJodHRwczovLzZqMG43a3g5MmMuZXhlY3V0ZS1hcGkudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vZGV2L2FwaS9sb2dpblwiXG5cbmNvbnN0IExvZ2luID0gKCkgPT4ge1xuICAgIGNvbnN0IFt1c2VybmFtZSxzZXRVc2VybmFtZV0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgICBjb25zdCBbcGFzc3dvcmQsc2V0UGFzc3dvcmRdID0gdXNlU3RhdGUoXCJcIik7XG4gICAgY29uc3QgW2lzTG9hZGluZyxzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtlcnJvcixzZXRFcnJvcl0gPSB1c2VTdGF0ZShudWxsKTtcblxuXG4gICAgXG5cbiAgICBjb25zdCBoYW5kbGVDaGFuZ2U9KHZhbHVlKT0+e1xuICAgICAgY29uc29sZS5sb2coXCJ2YWx1ZSBcIix2YWx1ZSlcbiAgICAgIHNldENvbnRlbnQodmFsdWUpO1xuICAgIH1cblxuICAgIGNvbnN0IGxvZ2luID0gKCkgPT57XG4gICAgICBpZih1c2VybmFtZT09XCJcInx8cGFzc3dvcmQ9PVwiXCIpe1xuICAgICAgICBzZXRFcnJvcihcInBsZWFzZSBjb21wbGV0ZSB0aGUgZm9ybSBhbmQgdHJ5IGFnYWluXCIpXG4gICAgICB9ZWxzZXtcbiAgICAgICAgY29uc29sZS5sb2coXCJ1c2VybmFtZSBhbmQgcGFzc3dvcmQgXCIsIHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgc2V0SXNMb2FkaW5nKHRydWUpXG4gICAgICAgIGZldGNoKExPR0lOX0FQSSwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgfSwgXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgICAgICAgIC50aGVuKGRhdGEgPT57XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT57XG4gICAgICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSlcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICAgICAgICB9KSBcbiAgICAgIH1cbiAgICB9XG5cbiAgICBcbiAgICByZXR1cm4oXG5cbiAgICAgICAgPExvYWRpbmdPdmVybGF5XG4gICAgICAgICAgICBhY3RpdmU9e2lzTG9hZGluZ31cbiAgICAgICAgICAgIHNwaW5uZXJcbiAgICAgICAgICAgIHRleHQ9J0xvYWRpbmcgeW91ciBjb250ZW50Li4uJ1xuICAgICAgICAgICAgPlxuICAgICAgICAgIFxuXG4gICAgICAgICAgPEFkbWluTGF5b3V0PiAgXG4gICBcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgICAgPC9BZG1pbkxheW91dD5cbiAgICAgICAgPC9Mb2FkaW5nT3ZlcmxheT5cbiAgICAgIClcbiAgICBcbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0= */\\n/*@ sourceURL=/Users/dayoakinbami/Desktop/dev/abc-frontend/abc/pages/login.js */\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/dayoakinbami/Desktop/dev/abc-frontend/abc/pages/login.js"],"names":["React","useState","useRef","Link","Head","LoadingOverlay","AdminLayout","LOGIN_API","Login","username","setUsername","password","setPassword","isLoading","setIsLoading","error","setError","handleChange","value","console","log","setContent","login","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,QAAqC,OAArC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AAKA,MAAMC,SAAS,GAAG,sEAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAUC;AAAV,MAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAUC;AAAV,MAAyBX,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAWC;AAAX,MAA2Bb,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM;AAAA,OAACc,KAAD;AAAA,OAAOC;AAAP,MAAmBf,QAAQ,CAAC,IAAD,CAAjC;;AAKA,QAAMgB,YAAY,GAAEC,KAAD,IAAS;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,KAArB;AACAG,IAAAA,UAAU,CAACH,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMI,KAAK,GAAG,MAAK;AACjB,QAAGb,QAAQ,IAAE,EAAV,IAAcE,QAAQ,IAAE,EAA3B,EAA8B;AAC5BK,MAAAA,QAAQ,CAAC,wCAAD,CAAR;AACD,KAFD,MAEK;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCX,QAAtC,EAAgDE,QAAhD;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,MAAAA,KAAK,CAAChB,SAAD,EAAY;AACbiB,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AACH,oBAAU,kBADP;AAEH,0BAAgB;AAFb,SAFI;AAMbC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAChBnB,UAAAA,QAAQ,EAAEA,QADM;AAEhBE,UAAAA,QAAQ,EAAEA;AAFM,SAAf;AANO,OAAZ,CAAL,CAWKkB,IAXL,CAWUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXtB,EAYKF,IAZL,CAYUG,IAAI,IAAG;AACXb,QAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACAlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,OAhBL,EAiBKmB,KAjBL,CAiBWlB,KAAK,IAAG;AACbD,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,OApBL;AAqBD;AACF,GA5BD;;AA+BA,SAEI,MAAC,cAAD;AACI,IAAA,MAAM,EAAEF,SADZ;AAEI,IAAA,OAAO,MAFX;AAGI,IAAA,IAAI,EAAC,yBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wkGAPF,CAFJ;AAkBH,CA/DD;;AAiEA,eAAeL,KAAf","sourcesContent":["import React, {useState,useRef} from 'react';\n// import ReactQuill from 'react-quill';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport LoadingOverlay from 'react-loading-overlay'\n\nimport AdminLayout from '../components/AdminLayout';\n\n// import 'react-quill/dist/quill.snow.css'\n\n\n\n\nconst LOGIN_API = \"https://6j0n7kx92c.execute-api.us-east-2.amazonaws.com/dev/api/login\"\n\nconst Login = () => {\n    const [username,setUsername] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const [isLoading,setIsLoading] = useState(false);\n    const [error,setError] = useState(null);\n\n\n    \n\n    const handleChange=(value)=>{\n      console.log(\"value \",value)\n      setContent(value);\n    }\n\n    const login = () =>{\n      if(username==\"\"||password==\"\"){\n        setError(\"please complete the form and try again\")\n      }else{\n        console.log(\"username and password \", username, password)\n        setIsLoading(true)\n        fetch(LOGIN_API, {\n            method: 'POST',\n            headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n            }, \n            body: JSON.stringify({\n                 username: username,\n                 password: password\n               })\n            })\n            .then(response => response.json())\n            .then(data =>{\n              console.log(data);\n              setIsLoading(false)\n            \n            })\n            .catch(error =>{\n              setIsLoading(false)\n              console.log(error)\n            }) \n      }\n    }\n\n    \n    return(\n\n        <LoadingOverlay\n            active={isLoading}\n            spinner\n            text='Loading your content...'\n            >\n          \n\n          <AdminLayout>  \n   \n            <style jsx>{`\n              \n            `}</style>\n          </AdminLayout>\n        </LoadingOverlay>\n      )\n    \n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}